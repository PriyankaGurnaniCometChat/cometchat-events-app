[{"C:\\Users\\Elbelel\\Documents\\Article\\events-app\\src\\pages\\Live_event.js":"1","C:\\Users\\Elbelel\\Documents\\Article\\cometchat-events\\cometchat-events-app\\src\\reportWebVitals.js":"2","C:\\Users\\Elbelel\\Documents\\Article\\cometchat-events\\cometchat-events-app\\src\\pages\\Login.js":"3","C:\\Users\\Elbelel\\Documents\\Article\\cometchat-events\\cometchat-events-app\\src\\pages\\Programs.js":"4","C:\\Users\\Elbelel\\Documents\\Article\\cometchat-events\\cometchat-events-app\\src\\App.js":"5","C:\\Users\\Elbelel\\Documents\\Article\\cometchat-events\\cometchat-events-app\\src\\pages\\Live_event.js":"6","C:\\Users\\Elbelel\\Documents\\Article\\cometchat-events\\cometchat-events-app\\src\\pages\\Create_event.js":"7"},{"size":5860,"mtime":1610636347950,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1610642512972,"results":"10","hashOfConfig":"11"},{"size":2450,"mtime":1612283116098,"results":"12","hashOfConfig":"11"},{"size":1932,"mtime":1610706504919,"results":"13","hashOfConfig":"11"},{"size":839,"mtime":1610642507226,"results":"14","hashOfConfig":"11"},{"size":5965,"mtime":1612277309273,"results":"15","hashOfConfig":"11"},{"size":3171,"mtime":1612276263944,"results":"16","hashOfConfig":"11"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1kbhlrb",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9szy53",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Elbelel\\Documents\\Article\\events-app\\src\\pages\\Live_event.js",["32"],"C:\\Users\\Elbelel\\Documents\\Article\\cometchat-events\\cometchat-events-app\\src\\reportWebVitals.js",[],"C:\\Users\\Elbelel\\Documents\\Article\\cometchat-events\\cometchat-events-app\\src\\pages\\Login.js",[],"C:\\Users\\Elbelel\\Documents\\Article\\cometchat-events\\cometchat-events-app\\src\\pages\\Programs.js",[],"C:\\Users\\Elbelel\\Documents\\Article\\cometchat-events\\cometchat-events-app\\src\\App.js",[],"C:\\Users\\Elbelel\\Documents\\Article\\cometchat-events\\cometchat-events-app\\src\\pages\\Live_event.js",["33"],"import React from 'react'\r\nimport \"../App.css\"\r\nimport { Col,Navbar, Card, Row,Dropdown} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {CometChat} from '@cometchat-pro/chat'\r\n\r\nconst Styles = styled.div `\r\n\r\n.display-name{\r\n    background: black;\r\n    color: white;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    text-align: center;\r\n    padding: 5px;\r\n}\r\n\r\n.chat-sec{\r\n  height: 500px;\r\n  padding-bottom: 20px;\r\n}\r\n\r\n.msg{\r\n  position: absolute;\r\n  bottom: 0;\r\n  margin: 6px;\r\n  padding: 5px;\r\n}\r\n\r\ninput[type=text]{\r\n  width: 330px;\r\n  padding: 5px;\r\n  border: none;\r\n  border-bottom: 1px solid gray;\r\n}\r\n\r\nbutton{\r\n  background-color: white;\r\n  border: none;\r\n  color: gray;\r\n  padding: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.main-chat{\r\n  height:300px;\r\n  overflow: scroll;\r\n}\r\n\r\n`\r\n\r\nexport const Live_event = ({match}) => {\r\n    const [event,setEvents] = React.useState([])\r\n    const [messages,setMessages] = React.useState([])\r\n    const [message,setMessage]= React.useState('')\r\n    const [user,setUser] = React.useState([])\r\n\r\n\r\n\r\nconst getEvent = async ()=>{\r\n        \r\n        const response = await fetch(`http://localhost:5000/events/event/${match.params.id}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            credentials: 'same-origin', \r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n          });\r\n          const datas = await response.json()\r\n          setEvents(datas); \r\n          var GUID = datas.title;\r\n          var password = \"\";\r\n          var groupType = CometChat.GROUP_TYPE.PUBLIC;\r\n          \r\n          CometChat.joinGroup(GUID, groupType, password).then(\r\n            group => {\r\n              console.log(\"Group join\")\r\n            },\r\n            error => {\r\n              console.log(\"Group joining failed with exception:\", error);\r\n            })\r\n\r\n            var limit = 100;\r\n            var messagesRequest = new CometChat.MessagesRequestBuilder()\r\n              .setLimit(limit)\r\n              .setGUID(GUID)\r\n              .build();\r\n            \r\n            messagesRequest.fetchPrevious().then(\r\n              messages => {\r\n                console.log(\"Message list fetched:\", messages);\r\n                setMessages(messages)\r\n              },\r\n              error => {\r\n                console.log(\"Message fetching failed with error:\", error);\r\n              }\r\n            );\r\n\r\n             CometChat.getLoggedinUser().then(\r\n              user => {\r\n                setUser(user.name.split(\"\"))\r\n                console.log(user.name.split(\"\"))\r\n              },\r\n              error => {\r\n                console.log(\"error getting details:\", { error });\r\n              }\r\n            );\r\n\r\n    }\r\n\r\n\r\nCometChat.addMessageListener(\r\n  \"UNIQUE_LISTENER_ID\",\r\n  new CometChat.MessageListener({\r\n    onTextMessageReceived: textMessage => {\r\n      console.log(\"Text message received successfully\", textMessage);\r\n      const data = {\r\n          'name':textMessage.sender.name,\r\n          'text':textMessage.text\r\n      }\r\n      setMessages(messages.concat(data))\r\n    }\r\n  })\r\n);\r\n      \r\n\r\nconst sendMessage = (e)=>{\r\n    e.preventDefault()\r\n\r\nvar receiverID = event.title;\r\nvar messageText = message;\r\nvar receiverType = CometChat.RECEIVER_TYPE.GROUP;\r\n\r\nvar textMessage = new CometChat.TextMessage(\r\n  receiverID,\r\n  messageText,\r\n  receiverType\r\n);\r\n\r\nCometChat.sendMessage(textMessage).then(\r\n  message => {\r\n    console.log(\"Message sent successfully:\", message);\r\n    setMessage('')\r\n    const data = {\r\n        'name':message.sender.name,\r\n        'text':message.text\r\n    }\r\n    setMessages(messages.concat(data))\r\n})\r\n}\r\n\r\n\r\nconst logout = () => {\r\n    CometChat.logout().then(() => {\r\n      window.location.href = '/';\r\n    });\r\n  }\r\nReact.useEffect(()=>{\r\n    getEvent()\r\n},[])\r\n    \r\n    return (\r\n        <Styles>\r\n\r\n            <Navbar sticky=\"top\" bg=\"light\" variant=\"light\">\r\n            <Navbar.Brand href=\"#home\">Live section</Navbar.Brand>\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Dropdown>\r\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n  <h6 className=\"display-name\"> {user[0]}</h6>\r\n  </Dropdown.Toggle>\r\n\r\n  <Dropdown.Menu>\r\n    <Dropdown.Item href=\"#\"> <p onClick={logout}>logout</p></Dropdown.Item>\r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n            </Navbar.Collapse>\r\n            </Navbar>\r\n            \r\n                \r\n            <Row className=\"m-3\">\r\n                <Col sm={8}>\r\n                <iframe \r\n                    title={event.title}\r\n                    width=\"100%\" \r\n                    height=\"500px\" \r\n                    src={event !== undefined ? event.stream :null}>\r\n                    </iframe>\r\n                    <h5> <strong>{event !== undefined ? event.title :null}</strong> </h5>\r\n                </Col>\r\n\r\n                <Col sm={4}>   \r\n                <Card className=\"chat-sec\">\r\n                <Card.Header as=\"h5\">Chat section</Card.Header>\r\n                <Card.Body className=\"main-chat\">\r\n                   <div className=\"\">\r\n                   {messages.map((message,i)=>(\r\n                    <div className=\"\" key={i}>\r\n                    <p><span><b>{message.sender ? message.sender.name:message.name}:</b></span> {message.text}</p>\r\n                    </div>\r\n                   ))}\r\n                   </div>\r\n                   \r\n                </Card.Body>\r\n                <div className=\"msg\">\r\n                    <form onSubmit={sendMessage}>   \r\n                    <input type=\"text\" placeholder=\"Say something\" value={message} onChange={(e)=> setMessage(e.target.value)} />\r\n                    <button type=\"submit\"> <i className=\"fa fa-send\"></i>  </button>\r\n                    </form>\r\n                   </div>\r\n                </Card>\r\n                \r\n                </Col>\r\n            </Row>\r\n        </Styles>\r\n    )\r\n}\r\n","C:\\Users\\Elbelel\\Documents\\Article\\cometchat-events\\cometchat-events-app\\src\\pages\\Create_event.js",["34"],{"ruleId":"35","severity":1,"message":"36","line":166,"column":3,"nodeType":"37","endLine":166,"endColumn":5,"suggestions":"38"},{"ruleId":"35","severity":1,"message":"36","line":162,"column":3,"nodeType":"37","endLine":162,"endColumn":5,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":28,"column":11,"nodeType":"42","messageId":"43","endLine":28,"endColumn":19},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getEvent'. Either include it or remove the dependency array.","ArrayExpression",["44"],["45"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar",{"desc":"46","fix":"47"},{"desc":"46","fix":"48"},"Update the dependencies array to be: [getEvent]",{"range":"49","text":"50"},{"range":"51","text":"50"},[3924,3926],"[getEvent]",[3842,3844]]